// Test generated by RoostGPT for test simple-go using AI Model gpt

package main

import (
	"fmt"
	"testing"
)

type Rectangle struct {
	width, height float64
}

type Square struct {
	side float64
}

func (r *Rectangle) CalculateArea() float64 {
	return r.width * r.height
}

func (s *Square) CalculateArea() float64 {
	return s.side * s.side
}

func main() {
	rect := &Rectangle{width: 16, height: 6} //set the width and height of square
	area := rect.CalculateArea()
	fmt.Println("Area of rectangle: ", area) //print area of rectangle

	sq := &Square{side: 8} //set side of square
	area = sq.CalculateArea()
	fmt.Println("Area of square: ", area) //print area of square.
}

func TestCalculateArea(t *testing.T) {
	rect := &Rectangle{width: 16, height: 6}
	area := rect.CalculateArea()
	if area != 96 {
		t.Error("Expected area of rectangle to be 96, but got ", area)
	}

	sq := &Square{side: 8}
	area = sq.CalculateArea()
	if area != 64 {
		t.Error("Expected area of square to be 64, but got ", area)
	}
}

func TestCalculateAreaWithZero(t *testing.T) {
	rect := &Rectangle{width: 0, height: 6}
	area := rect.CalculateArea()
	if area != 0 {
		t.Error("Expected area of rectangle to be 0, but got ", area)
	}

	sq := &Square{side: 0}
	area = sq.CalculateArea()
	if area != 0 {
		t.Error("Expected area of square to be 0, but got ", area)
	}
}
